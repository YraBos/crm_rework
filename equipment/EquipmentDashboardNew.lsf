MODULE EquipmentDashboardNew;

// можно подключить модуль для загрузки для отладки серийных номеров EquimpentImportSerial (скопировать из H:\Fusion_Arc\Old_Added\equipment\)
REQUIRE EquipmentDashboard, EquipmentDataImport, EquipmentReports, Time;


fltNumber 'Фильтр по номеру' = DATA LOCAL STRING[50] (); 
// вычисление ID equipment от значения ключа оборудования
exprEquipment '' (ISTRING[250] num) = GROUP MAX equipment(EquipmentSerial n1) IF upper(number(n1)) = upper(num);
// сброс выражения фильтра
clsExprEquipment 'X' () {fltNumber() <- NULL;}

// генерация лицензий по фильтру на форме
inMark 'Отм.' = DATA LOCAL BOOLEAN (Equipment);

onGenLic 'Создать LIC (по клиенту)' (Equipment ob) {
    LOCAL ctxt = TEXT(); 
    IF NOT filterCustomer() THEN { MESSAGE 'Определите клиента'; RETURN ; }
    inMark(Equipment e) <- NULL;
    FOR [FILTER equipmentDashboard.e](Equipment e) DO inMark(e) <- TRUE;
    FOR (Equipment e IS Equipment) AND customer(e) = customer(ob) AND inMark(e) DO {
        generateLicense(e);
        fileToString(file(e));
        ctxt() <- (IF NOT ctxt() THEN '' ELSE ctxt() + '\n') + resultString(); 
    }
    stringToFile(ctxt(),'UTF-8', '');
    open(resultFile(),'lic');
}

// Алфавитно-цифровой QR код = 4296 байт, лицензии по 32 байта (всегда)
CLASS TempLicQR 'QR коды';
qrtext 'QR код' = DATA STRING[3200] (TempLicQR); // на 100 лицензий, 3200
snum 'ID ТСД' = DATA STRING (TempLicQR);
cnt 'Количество' = DATA INTEGER (TempLicQR);

FORM prnTempLicQR 'Печатаная форма'
    PROPERTIES () equTitle1, equTitle2, equTitle3, equTitle4 
    OBJECTS t = TempLicQR
    PROPERTIES(t) READONLY cnt, snum, qrtext 
;

onPrintQR 'Печать QR (по текущему)' (Equipment e) {
    IF NOT file(e) THEN { MESSAGE 'Сгенерите лицензии\nи повторите операцию'; RETURN; }
    LOCAL cqrtext  = STRING[3200] (); cqrtext() <- '';
    LOCAL csnum, cid = STRING (); csnum() <- '';
    LOCAL ctxt = TEXT ();
    LOCAL ncnt = INTEGER (); ncnt() <- 0;
    DELETE TempLicQR o1 WHERE o1 IS TempLicQR;
    fileToString(file(e));
    ctxt() <- replace(resultString(),'\n','');
    ctxt() <- replace(ctxt(),'\r','');
    FOR iterate(INTEGER i,1,length(ctxt())/32) DO {
        cid() <- substr(ctxt(),32 * (i-1) + 1,32);
        IF ncnt() + 1 < 101 THEN {
            cqrtext() <- cqrtext() + cid();
            IF ncnt() > 0 THEN csnum() <- csnum() + ', ';
            csnum() <- csnum() + cid();  
            ncnt() <- ncnt() + 1;    
        } ELSE {
            NEW o = TempLicQR { qrtext(o) <- cqrtext(); cnt(o) <- ncnt(); snum(o) <- csnum(); }
            cqrtext()   <- cid();
            csnum()     <- cid();
            ncnt()      <- 1;       
        }
    }
    NEW o = TempLicQR { qrtext(o) <- cqrtext(); cnt(o) <- ncnt(); snum(o) <- csnum(); }
    equTitle1() <- 'Список лицензий';
    equTitle2() <- 'Клиент: ' + nameCustomer(e);
    equTitle3() <- 'Дата: ' + toDateDDMMYYYY(createdDate(e)) + ', всего номеров: ' + trim(toChar(quantitySerial(e),'99999'));
    equTitle4() <- NULL;
    // equTitle4() <- GROUP CONCAT number(EquipmentSerial s) IF equipment(s) = e, ', ' ORDER s; // CONCAT не тянет, если много (> 170)
    // по этому через FOR
    FOR (EquipmentSerial s IS EquipmentSerial) AND equipment(s) = e ORDER s DO 
        IF NOT equTitle4() THEN equTitle4() <- number(s); ELSE equTitle4() <- equTitle4() + ', ' + number(s);  
    PRINT prnTempLicQR PDF;
}

// только для отладки, см ниже на форме equipmentDashboard, PROPERTIES onLoadLic(e) 
onLoadLic 'Загрузить LIC в БД' (Equipment e) { INPUT f = FILE DO { file(e) <- f; APPLY; } } TOOLBAR ;

EXTEND FORM equipmentDashboard
    PROPERTIES(n) READONLY dateChange, numberChange, note
    PROPERTIES onMenuDataImoort(e,t), onMenuReports(e,t), onGenLic(e), onPrintQR(e)
//    PROPERTIES onLoadLic(e) // только для отладки
    PROPERTIES fltNumber(), clsExprEquipment()
    FILTERS IF fltNumber() THEN e = exprEquipment(fltNumber()) ELSE TRUE
    FILTERS IF fltNumber() THEN upper(number(n)) = upper(fltNumber()) ELSE TRUE
;


DESIGN equipmentDashboard {
    head {
        NEW mhead {
            horizontal = FALSE ;
            NEW head1 {
                horizontal = TRUE ;
                MOVE PROPERTY (name(t));
                MOVE PROPERTY (nameFilterCustomer());
                MOVE PROPERTY (nameFilterContract(t));
                MOVE PROPERTY (fltNumber());
                MOVE PROPERTY (clsExprEquipment());
            }
            NEW head2 {
                horizontal = TRUE ;
                MOVE PROPERTY (quantitySerial(t)) {background=#E1E1E1;};
                MOVE PROPERTY (onMenuDataImoort(e,t)) {background=#DFDFFF;};
                MOVE PROPERTY (onMenuReports(e,t)) {background=#DFFFDF;};
                MOVE PROPERTY (onGenLic(e));
                MOVE PROPERTY (onPrintQR(e));
            }
        }
    }
}


// удаление серийных номеров во вкладке Серийные номера, RM 14861
onDeleteSerial 'Удалить СН' (EquipmentSerial o) {
    ASK 'Вы действительно хотите удалить SN?' DO {
        LOCAL icnt = INTEGER();         
        DELETE o;
        icnt() <- GROUP SUM 1 IF equipment(EquipmentSerial es) = equipment(o); 
        dataQuantitySerial(Equipment e) <- icnt() WHERE e = equipment(o);
        APPLY;
    }        
}


EXTEND FORM equipmentDashboard
    PROPERTIES(es) TOOLBAR onDeleteSerial
;