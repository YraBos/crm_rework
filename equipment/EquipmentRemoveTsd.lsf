MODULE EquipmentRemoveTsd;

REQUIRE EquipmentDashboard, Time, Utils, EquipmentDataExt;

fromClientName 'Клиент источник' (Customer o) = name(o);
toClientName 'Клиент получатель' (Customer o) = name(o);

clientFrom 'ID от кого' = DATA LOCAL Customer();

FORM removeTSD 'Перемещение ТСД'
    OBJECTS client1 = Customer PANEL 
        PROPERTIES READONLY toClientName(client1) 
    OBJECTS client2 = Customer PANEL NULL 
        PROPERTIES fromClientName(client2) SELECTOR 
    EVENTS ON INIT {
        SEEK removeTSD.client1 = filterCustomer();
    }    
;

DESIGN removeTSD {
    height = 100;
    OBJECTS {
        NEW cnt {
            horizontal = FALSE ;
            MOVE PROPERTY (toClientName(client1));
            MOVE PROPERTY (fromClientName(client2));
        }
    }
}

onRemoveTSD 'Перенос ТСД' (SubjectType t) {
    DIALOG removeTSD OBJECTS client1 INPUT, client2 INPUT DO {
        IF NOT client2 THEN {
            MESSAGE 'Клиент - источник данных\nне определен!'; RETURN;
        }
        INPUT xfile = EXCELFILE DO {
            LOCAL sn = ISTRING[250] (INTEGER);
            LOCAL old = EquipmentSerial ();
            LOCAL cnt = INTEGER ();
            LOCAL noteNew, noteOld = STRING[200] ();
            noteNew() <- 'Перемещен из: ' + name(client2) + ', ' + toDateDDMMYY(currentDate()) + 'г.';
            noteOld() <- 'Перемещен в: ' + name(filterCustomer()) + ', ' + toDateDDMMYY(currentDate()) + 'г.';
            IMPORT XLS FROM xfile TO sn = B;
            NEW e = Equipment {
                createdUser(e) <- currentUser();
                createdDate(e) <- currentDate();
                createdTime(e) <- currentTime();
                subjectType(e) <- t;
                customer(e) <- filterCustomer();
                FOR imported(INTEGER i) AND i > 0 ORDER i DO {
                    old() <- GROUP MAX (EquipmentSerial o) IF trim(number(o)) == trim(sn(i)) AND customer(equipment(o)) = client2;
                    IF old() THEN {
                        NEW es = EquipmentSerial {
                            cnt() <- cnt() (+) 1;
                            equipment(es) <- e;
                            number(es) <- sn(i);
                            note(es) <- noteNew();
                        }
                        number(old()) <- '*' + number(old());
                        note(old()) <- noteOld();
                    }
                }
                IF cnt() THEN {
                    MESSAGE 'Перемещено ' + trim(toChar(cnt(), '999999')) + ' sn';
                    APPLY;
                } ELSE {
                    CANCEL;
                    MESSAGE 'Операция не выполнена\nНет данных для перемещения';
                }
            } // new equipment    
        } // input
    } // dialog
}
    
    
// делалось для переноса SN из Виталюра в Санту (май 2023), RM23792
onLoadSerialXls 'Загрузка SN из Xls' (SubjectType t) {
    INPUT xfile = EXCELFILE DO {
        LOCAL sn = ISTRING[250](INTEGER);
        LOCAL cnt = INTEGER ();
        IMPORT XLS FROM xfile TO sn = B;
        NEW e = Equipment {
            createdUser(e) <- currentUser();
            createdDate(e) <- currentDate();
            createdTime(e) <- currentTime();
            subjectType(e) <- t;
            customer(e)    <- filterCustomer();
            FOR imported(INTEGER i) AND i > 0 ORDER i DO NEW es = EquipmentSerial {
                cnt() <- cnt() (+) 1; 
                equipment(es) <- e;
                number(es) <- sn(i);
            }
        }
        IF cnt() THEN {
            MESSAGE 'Импортировано ' + trim(toChar(cnt(),'999999')) + ' sn';
            APPLY;
        } ELSE {
            CANCEL;
            MESSAGE 'Операция не выполнена\nДанные не импортированы';
        }
    }
}