MODULE CustomerNew;

REQUIRE Customer, CustomerAttachment, Utils, Time;

calcInfo 'Данные сверки' = DATA LOCAL TEXT (Customer);
delimiter 'Разделитель' = DATA LOCAL STRING[10] () CHARWIDTH 10; 
clientType 'Тип клиента' = DATA STRING[50] (Customer); 

onCalc 'Обновить' () {
    calcInfo(Customer c) <- '';
    FOR (Customer o IS Customer) AND isSubstring(info(o),delimiter()) DO {
        FOR iterate(INTEGER i, 2, wordCount(info(o),delimiter())) ORDER i DO {
            calcInfo(o) <- calcInfo(o) + getWord(getWord(info(o),delimiter(),i),'\n',1) + ';      ';
        }  
    }
}

// статический справочник отчетов
CLASS EnumNameReports 'Отчеты по сверке' {
    p1 ' 1. Сверка по клиенту, тип SV', p2 ' 2. Cверка по ТО, тип S1', p3 ' 3. Cверка по ТСД, тип S2',
    p4 ' 4. Сверка по ТО с СП, тип S3', p5 ' 5. Ежемесячная сверка, тип S1', p6 ' 6. Сверка по месяцу, тип S1'
}

FORM listEnumNameReports ''
    OBJECTS ob = EnumNameReports
    PROPERTIES(ob) READONLY staticCaption 
    ORDERS staticCaption(ob)
; 

CLASS TempCustomerReports 'Временные отчеты по клиенту';
pi '' = DATA LOCAL INTEGER  (TempCustomerReports);
p1 '' = DATA LOCAL TEXT     (TempCustomerReports);
p2 '' = DATA LOCAL TEXT     (TempCustomerReports);
p3 '' = DATA LOCAL TEXT     (TempCustomerReports);
p4 '' = DATA LOCAL TEXT     (TempCustomerReports);
p5 '' = DATA LOCAL TEXT     (TempCustomerReports);
p6 '' = DATA LOCAL TEXT     (TempCustomerReports);

// заголовки отчета
date = DATA LOCAL DATE (); title = DATA LOCAL TEXT (); 

FORM repTempCustomerReports 'Печатная форма универсального отчета'
  PROPERTIES() date, title PANEL  
  OBJECTS o1 = TempCustomerReports
  PROPERTIES(o1) pi,p1,p2,p3,p4,p5,p6
  ORDERS pi(o1)   
;

newTempCustomerReports '' (INTEGER ind, TEXT c1,c2,c3,c4,c5,c6) {
    DELETE TempCustomerReports o1 WHERE o1 IS TempCustomerReports;
    NEW o2 = TempCustomerReports {
        pi(o2) <- ind; 
        p1(o2) <- c1; p2(o2) <- c2; p3(o2) <- c3;
        p4(o2) <- c4; p5(o2) <- c5; p6(o2) <- c6;
    }
}

// универсальный метод сверки
onRevise '' (STRING cTitle,cRepName1,cRepName2,cFilter,cDelimiter) {
    LOCAL frep = FILE();
    LOCAL cmsg,c1 = TEXT (); 
    LOCAL value1,value2 = BPSTRING[50] (INTEGER);
    LOCAL ot1, ot2  = Attachment();
    newTempCustomerReports(0,'название клиента','дата','количество лицензий','дата','количество ключей ТСД','примечание');
    FOR (Customer c IS Customer) AND isSubstring(clientType(c),cFilter) NEW ob = TempCustomerReports DO {
        pi(ob) <- 1; p1(ob) <- name(c);
        ot1()  <- GROUP MAX Attachment a IF customer(a) = c AND name(type(a)) = cRepName1;
        ot2()  <- GROUP MAX Attachment a IF customer(a) = c AND name(type(a)) = cRepName2;
        IF ot1() AND ot2() THEN {
            IMPORT XLS NOHEADER FROM file(ot1()) AS FILE TO value1 = A;
            IMPORT XLS NOHEADER FROM file(ot2()) AS FILE TO value2 = A;
            p2(ob) <- toDateDDMMYY(date(ot1())); p3(ob) <- value1(0);
            p4(ob) <- toDateDDMMYY(date(ot1())); p5(ob) <- value2(0);
            IF cDelimiter THEN {
                FOR iterate(INTEGER i, 2, wordCount(info(c),cDelimiter)) ORDER i DO {
                    c1() <- OVERRIDE getWord(getWord(info(c),cDelimiter,i),'\n',1), '';
                    IF cFilter = 'S2' THEN c1() <- OVERRIDE getWord(c1(),'///',2), '';
                    IF length(c1()) > 0 THEN p6(ob) <- trim(c1());
                }
            }      
        } 
    }  
    date() <- currentDate(); title() <- cTitle;
    PRINT repTempCustomerReports; // XLS;
}

// Обработка формы: меню с отчетамми
onCustomerReports 'Отчеты' (Customer c) {
    LOCAL enum  = EnumNameReports();
    LOCAL ps    = STRING[3] ();
    DIALOG listEnumNameReports OBJECTS ob INPUT DO {
        enum() <- ob;
    }
    IF NOT enum() THEN RETURN;
    ps() <- substr(staticCaption(enum()),1,3);  
    IF      ps() = ' 1.' THEN
        MESSAGE 'Обработка не подключена';
    ELSE IF ps() = ' 2.' THEN
        MESSAGE 'Обработка не подключена';
    ELSE IF ps() = ' 3.' THEN 
        onRevise('Отчет по сверке выданных лицензий ТСД','Список лицензий ТСД','Список ключей LS Trade ТСД','S2','*#*'); 
    ELSE IF ps() = ' 4.' THEN
        MESSAGE 'Обработка не подключена';
    ELSE IF ps() = ' 5.' THEN
        MESSAGE 'Обработка не подключена';
    ELSE IF ps() = ' 6.' THEN
        MESSAGE 'Обработка не подключена';
}


EXTEND FORM customers
    PROPERTIES onCalc(), delimiter()
    PROPERTIES(o) onCustomerReports 
    PROPERTIES(o) READONLY clientType AFTER nameGroup(o)
    PROPERTIES(o) PANEL READONLY calcInfo
    EVENTS ON INIT {
        delimiter() <- '###';
    }  
;

EXTEND FORM customer
    PROPERTIES(o) clientType 
;

EXTEND FORM dialogCustomers
    PROPERTIES(o) READONLY clientType AFTER nameGroup(o)
;

DESIGN customers {
    PANEL {
        NEW cntInfo {
            type = CONTAINERV; 
            fill = 1;
            NEW cnt1 {
                fill = 1;
                MOVE PROPERTY (calcInfo(o));
            }
            NEW cnt10 {
                type = COLUMNS ; 
                NEW cnt2 {
                    caption = 'параметры сверки';
                    type = CONTAINERH ;
                    MOVE PROPERTY (delimiter()) {charHeight = 1;};
                    MOVE PROPERTY (onCalc());
                    MOVE PROPERTY (onCustomerReports(o));
                }
           }     
        }
    }
}
