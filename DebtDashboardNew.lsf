MODULE DebtDashboardNew;

REQUIRE DebtDashboard, Payment, Utils, Time, CustomerNew, AgreementNew;

filterSumDebt 'Размер задолженности' = DATA LOCAL INTEGER ();

sumContract 'Сумма договора' (Debt d) = round(sum(contract(d)),2);
sumAgreement 'Сумма соглашения' (Debt d)  = round(sum(agreement(d)),2);
dateContract 'Дата договора' (Debt d) = date(contract(d));
dateAgreement 'Дата соглашения' (Debt d) = date(agreement(d));
balance 'Остаток' (Debt d) = round(sum(d) - IF paid(d) THEN paid(d) ELSE 0.00, 2);
numberAct 'Номер акта' (Debt d) = number(act(d));
dateAct 'Дата акта' (Debt d) = date(act(d));
nameAct 'Название акта' (Debt d) = name(act(d));
sumAct 'Сумма акта' (Debt d) = sum(act(d));

dateContractISO '' (Debt d) = toDateISO(dateContract(d));
agrFlag '' (Debt d) = IF agreement(d) THEN 1 ELSE 0;
actFlag '' (Debt d) = IF act(d) THEN 1 ELSE 0;

// связано с валютными договорами
inCurrency 'USD' (Debt d) = IF inCurrency(contract(d)) THEN 1 ELSE 0;

clientTypeDebt 'Тип клиента' (Debt d) = clientType(customer(d));

FORM reportDebs 'Печать'
    OBJECTS dd = DATE PANEL
    PROPERTIES VALUE (dd)
    OBJECTS c  = Customer PROPERTIES(c) name PANEL
    OBJECTS t  = ContractType PROPERTIES(t) name PANEL
    OBJECTS db = Debt
    PROPERTIES(db) date, nameLegalEntity, 
                   sum, paid, balance,                              // рублевый
                   numberContract, dateContract, nameContract, sumContract, dateContractISO,
                   numberAgreement, dateAgreement, nameAgreement, sumAgreement,
                   numberAct, dateAct, nameAct, sumAct,
                   agrFlag, actFlag, inCurrency 
    PROPERTIES sumDebt(c,dd)
    FILTERS customer(db) == c, date(db) <= dd, type(contract(db)) == t
    FILTERS abs(balance(db)) > 0
    FILTERS sumDebt(c, dd)
    FILTERS IF filterCustomerContractType() THEN t == filterCustomerContractType() ELSE TRUE 
    FILTERS IF filterSumDebt() THEN abs(sum(db) (-) paid(db)) > filterSumDebt() ELSE TRUE  
    ORDERS nameLegalEntity(db),dateContractISO(db),numberContract(db),date(db)
;

onReport 'Отчет' (Customer c, DATE dd) {
    PRINT reportDebs OBJECTS c = c, dd = dd XLS; // без XLS - отладка
}

EXTEND FORM debtDashboard
    PROPERTIES(d) READONLY clientTypeDebt AFTER nameCustomer(d)
    PROPERTIES READONLY clientType(c) AFTER name(c)
    OBJECTS le = LegalEntity
    PROPERTIES filterSumDebt(), onReport(c, dd)
    EVENTS ON INIT {
        filterSumDebt() <- 100;
    }
    FILTERS customer(le) = c
//    FILTERS IF filterSumDebt() THEN abs(sumDebt(c,t,dd)) > filterSumDebt() ELSE TRUE  
;

DESIGN debtDashboard {
    BOX (dd) {
        caption = 'Фильтры и отчеты';
        MOVE PROPERTY (filterSumDebt()) {marginLeft = 10;};
        MOVE PROPERTY (onReport(c, dd));
    }
}


// акты на соглашении, RM 12213
// ---------------------------------------------------------------- 
//onCreateActsAgrOnly 'Создать Акты (согл.)' () {
//    LOCAL copy = BOOLEAN ();
//    IF (GROUP SUM 1 IF in(Debt d) AND NOT act(d)) THEN NEWSESSION NESTED (in[Debt]) {
//        ASK 'Скопировать текст и название?' DO copy() <- TRUE;
//        //по соглашениям
//        FOR [GROUP SUM 1 IF in(Debt d) AND NOT act(d) BY contract(d), agreement(d)](Contract c, Agreement ag) DO NEW a = Act {
//            act(Debt d) <- a WHERE in(d) AND NOT act(d) AND contract(d) == c AND agreement(d) == ag;
//            contract(a) <- c;
//            agreement(a) <- ag;
//            date(a) <- currentDate();
//            sum(a) <- GROUP SUM sum(Debt d) IF in(d) AND act(d) == a;
//            number(a) <- ISTRING[15] ([GROUP MAX INTEGER(number(Act ac)) BY contract(ac), year(ac)](contract(a), year(a)) (+) 1);
//            type(a) <- IF actType(ag) THEN actType(ag) ELSE actType(type(c));
//            IF copy() THEN {
//                name(a) <- OVERRIDE name(ag), name(c);
//                text(a) <- OVERRIDE text(ag), text(c);
//            }
//            created(a) <- TRUE;
//        }
//        IF GROUP SUM 1 IF created(Act a) AND NOT actTemplate(contract(a)) THEN {
//            MESSAGE 'Для договоров № ' + (GROUP CONCAT (OVERRIDE number(contract(Act a)), 'б/н') IF created(a) AND NOT actTemplate(contract(a)), ', ' ORDER date(contract(a))) + ' не выбран шаблон для актов';
//        }
//        DIALOG requiredTemplateEntries OBJECTS d = currentDate() DO in(Debt d) <- NULL;
//    }
//}
//
//EXTEND FORM debtDashboard
//    PROPERTIES() onCreateActsAgrOnly 
//;
//
//DESIGN debtDashboard {
//    TOOLBAR (d) {
//        MOVE PROPERTY (onCreateActsAgrOnly()); 
//    }
//} 
// ---------------------------------------------------------------- 

