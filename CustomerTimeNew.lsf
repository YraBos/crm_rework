MODULE CustomerTimeNew;

REQUIRE CustomerTime, TimeEntryCustomer, Utils, IssueNew;
NAMESPACE Project;

discountHours 'Скидка' = DATA NUMERIC[7,2] (TimeEntry);

// вытягиваем поля на форму, name, number, hours, namePoject исключаем, они уже есть
//numberIssue2            '* НЗ *'                (TimeEntry t) = number(issue(t)); // отладка
descriptionStringIssue  'Описание'              (TimeEntry t) = descriptionString(issue(t));
commentStringIssue      'Комментарий'           (TimeEntry t) = commentsString(t) CHARWIDTH 100;
dateToIssue             'Завершена'             (TimeEntry t) = dateTo(issue(t));
dateTimeCreatedIssue    'Создана'               (TimeEntry t) =  toDate(dateTimeCreated(issue(t)));
dateTimeUpdatedIssue    'Обновлена'             (TimeEntry t) = toDate(dateTimeUpdated(issue(t)));
dateFromIssue           'Начата'                (TimeEntry t) = dateFrom(issue(t)); 
doneRatioIssue          'Готовность'            (TimeEntry t) = doneRatio(issue(t)); 
estimatedHoursIssue     'Оценка трудозатрат'    (TimeEntry t) = estimatedHours(issue(t)); 
nameAuthorIssue         'Автор'                 (TimeEntry t) = nameAuthor(issue(t));
nameAssignedToIssue     'Назначена'             (TimeEntry t) = nameAssignedTo(issue(t)); 
nameTrackerIssue        'Трекер'                (TimeEntry t) = nameTracker(issue(t)); 
numberAgreementIssue    'Номер соглашения'      (TimeEntry t) = numberAgreement(issue(t)); 
nameAgreementIssue      'Соглашение'            (TimeEntry t) = nameAgreement(issue(t));
numberContractIssue     'Номер договора'        (TimeEntry t) = numberContract(issue(t));
nameContractIssue       'Договор'               (TimeEntry t) = nameContract(issue(t));
nameStatusIssue         'Статус'                (TimeEntry t) = nameStatus(issue(t));
priorityNameIssue       'Приоритет'             (TimeEntry t) = priorityName(issue(t));
separateContractIssue   'ОД'                    (TimeEntry t) = separateContract(issue(t)) CHARWIDTH 4; 

inReport    ''      = DATA LOCAL BOOLEAN (TimeEntry);
in          'Отм.'  = DATA LOCAL BOOLEAN (TimeEntry) CHARWIDTH 5;

noError 'Без ошибок' = DATA LOCAL BOOLEAN ();
noSeparateContract 'Без отд. договора' = DATA LOCAL BOOLEAN ();
filterTracker  = DATA LOCAL Tracker();
nameFilterTracker 'Трекер' () = name(filterTracker()); 

// сокращаем формулы в расчетах, отчетах, дизайне
hoursResult '' (TimeEntry t) = hours(t) - IF discountHours(t) THEN discountHours(t) ELSE 0.00;

// !!! Копипастим из TimeEntryCustomer, иначе ни как
hoursFilterProjectExt 'Трудозатраты' (Customer c, DATE  df, DATE dt) = 
      GROUP SUM hoursResult(TimeEntry t)
        IF date(t) >= df AND date(t) <= dt 
        AND (customer(t) == c OR customer(project(t)) == c OR customer(issue(t)) == c)
        AND (project(t) == filterProject(c) OR project(issue(t)) == filterProject(c) OR NOT filterProject(c)) 
        AND (agreement(issue(t)) == filterAgreement() OR NOT filterAgreement()) 
        AND (contract(issue(t)) == filterContract() OR NOT filterContract())
        AND ((withoutAgreements() AND NOT agreement(issue(t))) OR NOT withoutAgreements() OR filterAgreement() OR filterContract())
    // --- новые условия
        AND (nameTrackerIssue(t) = nameFilterTracker() OR NOT nameFilterTracker())
        AND (IF noError() THEN NOT nameTrackerIssue(t) = 'Ошибка' ELSE TRUE)  
        AND (IF noSeparateContract() THEN NOT separateContractIssue(t) ELSE TRUE)
        AND inReport(t)
;
    
// !!! Копипастим из TimeEntryCustomer, иначе ни как
FORM customerReportExt 'Расширенный отчёт для клиента'
    OBJECTS cd = (c = Customer, df = DATE, dt = DATE) PANEL SUBREPORT 
    PROPERTIES 'Клиент' = name(c) SELECTOR, 'Дата с' = VALUE (df), 'Дата по' =  VALUE (dt), hoursFilterProjectExt(c, df, dt), withoutAgreements(), 
                nameFilterProject(c), nameFilterAgreement(), nameFilterContract()
    
    OBJECTS i = Issue
    PROPERTIES (i) READONLY number, dateTimeCreated, estimatedHours, nameAuthor, nameAssignedTo, nameTracker, nameStatus, name
    PROPERTIES hours(i, df, dt) AFTER estimatedHours(i)
    ORDERS number(i)
    FILTERS customer(i) == c, timeEntries(i, df, dt),
            (withoutAgreements() AND NOT agreement(i)) OR NOT withoutAgreements() OR filterAgreement() OR filterContract(),
            project(i) == filterProject(c) OR NOT filterProject(c),
            agreement(i) == filterAgreement() OR NOT filterAgreement(),
            contract(i) == filterContract() OR NOT filterContract()
    
    OBJECTS t = TimeEntry
    PROPERTIES (t) READONLY nameEmployee, date, hours, nameActivity, commentsString, hoursResult
    ORDERS date(t)
    FILTERS issue(t) == i, date(t) >= df AND date(t) <= dt AND inReport(t)
    FILTERS IF nameFilterTracker() THEN nameTrackerIssue(t) = nameFilterTracker() ELSE TRUE 
    FILTERS IF noError() THEN NOT nameTrackerIssue(t) = 'Ошибка' ELSE TRUE 
    FILTERS IF noSeparateContract() THEN NOT separateContractIssue(t) ELSE TRUE
    
    OBJECTS te = TimeEntry
    PROPERTIES (te) READONLY nameEmployee, date, hours, nameActivity, commentsString
    ORDERS date(te)
    FILTERS (customer(te) == c OR customer(project(te)) == c) AND NOT issue(te), date(te) >= df AND date(te) <= dt, 
            project(te) == filterProject(c) OR NOT filterProject(c), te IS TimeEntry AND NOT filterAgreement() AND NOT filterContract()
            AND inReport(te)
    FILTERS IF nameFilterTracker() THEN nameTrackerIssue(te) = nameFilterTracker() ELSE TRUE 
    FILTERS IF noError() THEN NOT nameTrackerIssue(te) = 'Ошибка' ELSE TRUE 
    FILTERS IF noSeparateContract() THEN NOT separateContractIssue(te) ELSE TRUE
;

printCustomerReportExt 'Расш. отчет' (Customer c, DATE df, DATE dt) {
    filterAgreement()       <- NULL;
    filterContract()        <- NULL;
    inReport(TimeEntry t)   <- NULL;
    FOR [FILTER customerTimeDashboard.t](TimeEntry t2) DO inReport(t2) <- TRUE;
    IF NOT hoursFilterProjectExt(c,df,dt) THEN {
        MESSAGE 'Нет данных для отображения\n' + 'Попробуйте изменить условие фильра';
        RETURN;
    }
//    MESSAGE hoursFilterProjectExt(c,df,dt); // итог для отладки, чтобы не формировать отчет
    PRINT customerReportExt OBJECTS c = c, df = df, dt = dt XLS; //XLS;
}

// кнопка показать в рэдмайне
openRM 'Показать' (Issue is) {open(is);}

EXTEND FORM customerTimeDashboard
    PROPERTIES(t)   in BEFORE id(t)
//    PROPERTIES(t)   inReport BEFORE in(t) // отладка, см. выше
    PROPERTIES(t)   discountHours AFTER hours(t)
    PROPERTIES(t)   READONLY nameStatusIssue, descriptionStringIssue, dateToIssue, dateTimeCreatedIssue, dateTimeUpdatedIssue, dateFromIssue,  
                    doneRatioIssue, estimatedHoursIssue, nameAuthorIssue, nameAssignedToIssue, nameTrackerIssue,  
                    numberAgreementIssue, nameAgreementIssue, numberContractIssue, nameContractIssue,
                    priorityNameIssue, separateContractIssue
    PROPERTIES      printCustomerReportExt(c, df, dt),  // отчет 
                    nameFilterTracker(), noError(), noSeparateContract(), openRM(is)

    PROPERTIES(t)   PANEL commentStringIssue
    EVENTS ON INIT {
        noError() <- TRUE; 
        noSeparateContract() <- TRUE;
    }                       
;

DESIGN customerTimeDashboard {
    timeEntries {
        report {
            PROPERTY(printCustomerReport(c, df, dt)) {caption = 'Отчет';};
        }
        NEW report2 AFTER report {
            caption = 'Дополнительные параметры';
            type = CONTAINERH; 
//            type = COLUMNS;  // если не будет входить линейка фильтров, то переходим на COLUMNS вместо CONTAINERH
//            columns = 8;
            MOVE PROPERTY (printCustomerReportExt(c, df, dt));
            MOVE PROPERTY (nameFilterTracker());
            MOVE PROPERTY (noError());
            MOVE PROPERTY (noSeparateContract()); 
        }
        NEW cntTablo AFTER report2 {
            type = CONTAINERV;
            MOVE PROPERTY (commentStringIssue(t)) {background=#EEF7F7;};
        }
        GRID(t) {
            MOVE PROPERTY (in(t)) {marginLeft = 20;marginRight = 20;}
            PROPERTY (numberIssue(t)) ;
        } 
        TOOLBARBOX(t) {
            MOVE PROPERTY (openRM(is));
        } 
    }
}