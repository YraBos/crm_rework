MODULE EquipmentDashboardNew;

REQUIRE EquipmentDashboard, ContractSubject, CustomerAttachment, TempClassReports;

// --- задач - 13003, 12704
numberChange 'Замена номера' = DATA ISTRING[250] (EquipmentSerial) CHARWIDTH 15;
dateChange 'Дата замены' = DATA DATE (EquipmentSerial);
note 'Примечание' = DATA STRING[200] (EquipmentSerial);

FORM editNumberChange 'Редактирование замен'
    OBJECTS n = EquipmentSerial PANEL  
    PROPERTIES(n) number, numberChange, dateChange, note 
    EDIT EquipmentSerial OBJECT n
    EVENTS ON INIT {
        IF NOT numberChange(n) THEN {
            numberChange(n) <- number(n);
            number(n) <- NULL; 
        }
        dateChange(n) <- currentDate(); 
    }
; 

DESIGN editNumberChange {
   BOX(n) {
        MOVE PROPERTY (number(n)) {caption = 'Новый номер';} 
        MOVE PROPERTY (dateChange(n));
        MOVE PROPERTY (numberChange(n)) {caption = 'Старый номер';}
        MOVE PROPERTY (note(n)); 
   } 
}

createdDate 'Дата' (EquipmentSerial s) = createdDate(equipment(s)); // дата создания ключа
nameLegalEntity 'Название организации' (EquipmentSerial s) = OVERRIDE ' ' + name(legalEntity(contract(equipment(s)))), '* Не связанные с договором';
sumCustomer 'Итого по клиенту' (Customer c, SubjectType t) = GROUP SUM 1 IF subjectType(equipment(EquipmentSerial s)) = t BY customer(equipment(s));  
nameAgrContract 'Название соглашения или контракта' (EquipmentSerial s) =
            OVERRIDE description(agreement(equipment(s))), description(contract(equipment(s))), '';
 
FORM repOutSerials 'Данные'
    OBJECTS c = Customer PROPERTIES name(c) PANEL
    OBJECTS t = SubjectType PROPERTIES name(t), sumCustomer(c, t) PANEL
    OBJECTS s = EquipmentSerial PROPERTIES(s) nameLegalEntity, createdDate, number, dateChange, numberChange, note, nameAgrContract
    FILTERS customer(equipment(s)) = c, subjectType(equipment(s)) = t
    ORDERS nameLegalEntity(s),createdDate(s) 
;

onRepOutSerials 'Данные' (Equipment e,SubjectType t) {
    IF NOT filterCustomer() THEN {
        MESSAGE 'Определите клиента'; RETURN ;
    } 
    IF NOT name(t) = 'LST ТСД' THEN {
    // просто отобразим отчет и выйдем
        PRINT repOutSerials OBJECTS c = customer(e),t = t XLS; // XLS;
        RETURN;
    }
    // формируем отчет и пишим в документы по клиенту, RM 14804 Список ключей LS Trade ТСД меняем на Список выданных ключей ТСД
    LOCAL frep = FILE();
    PRINT repOutSerials OBJECTS c = customer(e),t = t XLS TO frep; 
    LOCAL ot = Attachment();
    ot() <- GROUP MAX Attachment a IF customer(a) = customer(e) AND name(type(a)) = 'Список выданных ключей ТСД';
    IF NOT ot() THEN NEW a = Attachment {
        ot() <- a;
        customer(a) <- customer(e);
        type(a) <- GROUP MAX AttachmentType at IF name(at) = 'Список выданных ключей ТСД';
    }
    date(ot()) <- currentDate();
    file(ot()) <- frep();
    open(file(ot()));
    APPLY;
}

onLoadWorkTSD 'Загрузить раб. ТСД' (Equipment e) {
    IF NOT filterCustomer() THEN {
        MESSAGE 'Определите клиента'; RETURN ;
    }
    // грузим файл 
    LOCAL frep = FILE();
    INPUT fx = FILE DO frep() <- fx;
    IF NOT frep() THEN {
        MESSAGE 'Выполнение операции отменено';
        RETURN ;
    }
    LOCAL ot = Attachment();
    LOCAL at = AttachmentType();
    // ищем вид предложения, если не нашли, то создаем новое предложение
    at() <- GROUP MAX AttachmentType o IF name(o) = 'Список работающих ТСД';
    IF NOT at() THEN NEW o = AttachmentType {
        at() <- o; name(o) <- 'Список работающих ТСД';
    } 
    // ищем для клиента тип предложения, если нет, то создаем новую запись, иначе замещаем данные
    ot() <- GROUP MAX Attachment a IF customer(a) = customer(e) AND name(type(a)) = 'Список работающих ТСД';
    IF NOT ot() THEN NEW a = Attachment {
        ot() <- a; customer(a) <- customer(e); type(a) <- at();
    }
    date(ot()) <- currentDate(); file(ot()) <- frep();
    APPLY;
    MESSAGE 'Операция выполнена успешно';
}

number 'Номер'          = DATA STRING[250]  (TempClassReports);
dLast 'Дата пос. исп.'  = DATA STRING       (TempClassReports);
found 'Найден'          = DATA STRING[3]    (TempClassReports);

// заголовки отчета
title1 = DATA LOCAL TEXT (); title2 = DATA LOCAL TEXT (); title3 = DATA LOCAL TEXT (); title4 = DATA LOCAL TEXT (); 

FORM repTempEQUReport 'Сверка торговых объектов'
  PROPERTIES() title1, title2, title3, title4 PANEL  
  OBJECTS o1 = TempClassReports
  PROPERTIES(o1) pi, number, dLast, found
  ORDERS pi(o1)   
;

// R14583, сверка серийных номеров по договору
onReviseTSD 'Сверка раб. ТСД' (Equipment e) {
   newTempClassReports();
   IF NOT filterCustomer() THEN { MESSAGE 'Определите клиента'; RETURN; }
   // грузим файл 
   LOCAL ot = Attachment();
   LOCAL colC, colE = STRING(INTEGER);
   LOCAL npp = INTEGER();
   title1() <- 'Отчет по сверке работающих ТСД';
   title2() <- 'по клиенту: ' + name(customer(e));
   IF nameLegalEntityContract(e) THEN title2() <- title2() + ', ' + nameLegalEntityContract(e);
   IF nameAgreement(e) THEN title2() <- title2() + ', ' + nameAgreement(e); 
        ELSE IF nameContract(e) THEN title2() <- title2() + ', ' + nameContract(e); 
   title3() <- 'дата создания ключей: ' + toDateDDMMYYYY(createdDate(e));
   title4() <- 'дата отчета: ' + toDateDDMMYYYY(currentDate()); 
   ot() <- GROUP MAX Attachment a IF customer(a) = customer(e) AND name(type(a)) = 'Список работающих ТСД';
   IF NOT ot() THEN { MESSAGE 'Ненайден документ:\nСписок работающих ТСД'; RETURN; }
   IMPORT XLS NOHEADER FROM file(ot()) AS FILE TO colC = C, colE = E;
   FOR (EquipmentSerial o IS EquipmentSerial) IF equipment(o) = e DO {
        NEW ob = TempClassReports {
            npp() <- npp() (+) 1;
            pi(ob) <- npp();
            number(ob) <- number(o);
            found(ob) <- 'нет';
            FOR imported(INTEGER i) AND i > 1 ORDER i DO {
                colC(i) <- OVERRIDE colC(i),''; colE(i) <- OVERRIDE colE(i), '';
                IF colC(i) = number(o) THEN {
                    dLast(ob) <- colE(i);
                    found(ob) <- 'да';
                }   
            }
        }    
   }
   PRINT repTempEQUReport XLS; // XLS
}

fltNumber 'Фильтр по номеру' = DATA LOCAL STRING[50] (); 
// вычисление ID equipment от значения ключа оборудования
exprEquipment '' (ISTRING[250] num) = GROUP MAX equipment(EquipmentSerial n1) IF upper(number(n1)) = upper(num);
// сброс выражения фильтра
clsExprEquipment 'X' () {fltNumber() <- NULL;}

// генерация лицензий по фильтру на форме
inMark 'Отм.' = DATA LOCAL BOOLEAN (Equipment);

onGenLic 'Создать LIC' (Equipment ob) {
    LOCAL ctxt = TEXT(); 
    IF NOT filterCustomer() THEN {
        MESSAGE 'Определите клиента'; RETURN ;
    }
    inMark(Equipment e) <- NULL;
    FOR [FILTER equipmentDashboard.e](Equipment e) DO inMark(e) <- TRUE;
    FOR (Equipment e IS Equipment) AND customer(e) = customer(ob) AND inMark(e) DO {
        generateLicense(e);
        fileToString(file(e));
        ctxt() <- (IF NOT ctxt() THEN '' ELSE ctxt() + '\n') + resultString(); 
    }
    stringToFile(ctxt(),'UTF-8', '');
    open(resultFile(),'lic');
}

EXTEND FORM equipmentDashboard
    PROPERTIES(n) READONLY dateChange, numberChange, note
    PROPERTIES(n) NEWSESSION EDIT
    PROPERTIES onRepOutSerials(e,t), onLoadWorkTSD(e), onReviseTSD(e), onGenLic(e)
    PROPERTIES fltNumber(), clsExprEquipment()
    FILTERS IF fltNumber() THEN e = exprEquipment(fltNumber()) ELSE TRUE
    FILTERS IF fltNumber() THEN upper(number(n)) = upper(fltNumber()) ELSE TRUE
;


DESIGN equipmentDashboard {
    head {
        MOVE PROPERTY (onRepOutSerials(e,t));
        MOVE PROPERTY (onLoadWorkTSD(e));
        MOVE PROPERTY (onReviseTSD(e));
        MOVE PROPERTY (onGenLic(e));
    }
    TOOLBARRIGHT(e) {
        MOVE PROPERTY (fltNumber()) {marginLeft = 10;};
        
        MOVE PROPERTY (clsExprEquipment());
    } 
}


// удаление серийных номеров во вкладке Серийные номера, RM 14861
onDeleteSerial 'Удалить СН' (EquipmentSerial o) {
    ASK 'Вы действительно хотите удалить SN?' DO {
        LOCAL icnt = INTEGER();         
        DELETE o;
        icnt() <- GROUP SUM 1 IF equipment(EquipmentSerial es) = equipment(o); 
        dataQuantitySerial(Equipment e) <- icnt() WHERE e = equipment(o);
        APPLY;
    }        
}


EXTEND FORM equipmentDashboard
    PROPERTIES(es) TOOLBAR onDeleteSerial
;