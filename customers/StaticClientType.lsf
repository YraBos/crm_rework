MODULE StaticClientType;

REQUIRE Utils;

CLASS EnumProducts 'Продукты' {
    p101 'LS:  LS Trade Back-office, LS Trade Front-office',
    p102 'LT:  LS Trade ТСД',
    p103 'LH:  LS Trade Head-office',
    p104 'LC:  LS Cook',
    p105 'LF:  LS Food',
    p106 'LP:  LS Pharm',
    p107 'VT:  Ветразь - ТМЦ',
    p108 'VS:  Ветразь - Сводный Учет',
    p109 'ZP:  Зарплата',
    p110 'FS:  Ls Fusion ERP',
    p111 'FP:  Ls Fusion ERP – собственное производство',
    p112 'FL:  Ls Fusion ERP – склад, логистический центр',
    p113 'FF:  Ls Fusion ERP - фармация',
    p114 'FR:  Ls Fusion ERP – специальная разработка',
    p115 'KS:  LS Trade Сервер Торгового оборудования',
    p116 'FT:  LS Fusion ERP - Front-office'
}

CLASS EnumRevise 'Сверка' {
    p201  'SV: Проводится сверка по клиенту', 
    p202  'S1: Производится сверка по ТО',
    p203  'S2: Производится сверка по ТСД',
    p204  'S3: Производится сверка по ТО с СП',
    p2041 'S4: Производится сверка по р/местам',
    p205  'S1M: Производится ежемесячная сверка',  
//    p206 'S1N: Производится сверка по месяцу N'
    p211  'S11: Производиться сверка за январь',
    p212  'S12: Производиться сверка за февраль',
    p213  'S13: Производиться сверка за март',
    p214  'S14: Производиться сверка за апрель',
    p215  'S15: Производиться сверка за май',
    p216  'S16: Производиться сверка за июнь',
    p217  'S17: Производиться сверка за июль',
    p218  'S18: Производиться сверка за август',
    p219  'S19: Производиться сверка за сентябрь',
    p220  'S110: Производиться сверка за октябрь',
    p221  'S111: Производиться сверка за ноябрь',
    p222  'S112: Производиться сверка за декабрь'
}

CLASS EnumContract 'Условия договора' {    
    p301 'KD:  Сопровождение. Привязка к курсу доллара (порог изменения)', 
    p302 'LI1: Согласованный лимит времени обслуживания (консультации и доработки)',
    p303 'LI2: Согласованный лимит времени обслуживания (консультации)',
    p304 'ST:  Сопровождение. Привязка к нормо/часу',
    p305 'SO:  Сопровождение. Привязка  к стоимости за 1 ТО',
    p306 'SP:  Сопровождение. Привязка  к % от стоимости лицензий и доработок', 
    p307 'SF:  Сопровождение. Фиксированная  стоимость',
    p308 'SS:  Сопровождение. Расчёт по шкале',
    p309 'RK:  Сопровождение. Привязка к курсу доллара (на дату)',
    p310 'SL:  Сопровождение. Привязка  к % от стоимости лицензий', 
    p311 'VL:  Лицензия. Привязка к курсу доллара (на дату)',
//    p312 'TS:  Доработки по задачам'
//    p314 'TR: Доработки по задачам (рубли)',
    p315 'TV: Доработки по задачам (валюта)'
}

mark 'Отм.' = DATA LOCAL BOOLEAN    (EnumProducts);
mark 'Отм.' = DATA LOCAL BOOLEAN    (EnumRevise);
mark 'Отм.' = DATA LOCAL BOOLEAN    (EnumContract);
cdop 'Арг.' = DATA LOCAL STRING     (EnumContract)  CHARWIDTH 5;

captionStaticClientType 'Заголовок формы' = DATA LOCAL STRING ();
eventStaticClientType 'Событие формы' = DATA LOCAL BOOLEAN ();

fltClientType '' = DATA LOCAL STRING (INTEGER);
fltClientOR   '' = DATA LOCAL BOOLEAN ; // флаг, тип договора, задействован для реализации ИЛИ
noShowCDop    '' = DATA LOCAL BOOLEAN ;   

onClsClientTypeProp '' (BOOLEAN all) {
    IF all THEN {
        mark(EnumProducts ep) <- NULL; mark(EnumRevise er)   <- NULL; 
        mark(EnumContract ec) <- NULL; cdop(EnumContract ec) <- NULL;
    }
    fltClientOR() <- NULL;
    FOR iterate(INTEGER i,0,15) DO fltClientType(i) <- NULL;
}


FORM listEnumAtr ''
    OBJECTS ep = EnumProducts 
    PROPERTIES(ep) mark 
    PROPERTIES(ep) READONLY staticCaption
    PROPERTIES(ep) staticName SHOWIF NULL
    OBJECTS er = EnumRevise 
    PROPERTIES(er) mark 
    PROPERTIES(er) READONLY staticCaption
    PROPERTIES(er) staticName SHOWIF NULL
    OBJECTS ec = EnumContract 
    PROPERTIES(ec) mark 
    PROPERTIES(ec) cdop SHOWIF IF noShowCDop() THEN NULL ELSE TRUE  
    PROPERTIES(ec) READONLY staticCaption
    PROPERTIES(ec) staticName SHOWIF NULL
    ORDERS staticName(ep), staticName(er), staticName(ec)
    EVENTS ON INIT {eventStaticClientType() <- NULL;}
    EVENTS ON OK {eventStaticClientType() <- TRUE;}
;

DESIGN listEnumAtr {
    caption = IF NOT captionStaticClientType() THEN 'Выбор признаков для установки фильтра (до 10 признаков)' ELSE captionStaticClientType();
}

onClsClientTypePropAll 'Сбросить' () {
    onClsClientTypeProp(TRUE);
    formClose(); 
}

EXTEND FORM listEnumAtr
    PROPERTIES onClsClientTypePropAll()
;

DESIGN listEnumAtr {
    OBJECTS {
        horizontal = TRUE; // type = CONTAINERH;
    }
    BOX(ep) {flex=3;}
    BOX(er) {flex=2;}
    BOX(ec) {flex=5;}
    TOOLBARBOX {
        MOVE PROPERTY (onClsClientTypePropAll());  
    }
}

onSetClientTypeProp '' () {
    LOCAL i = INTEGER (); i() <- 0; 
    FOR (EnumProducts ep IS EnumProducts) AND mark(ep) AND i() < 10 ORDER staticName(ep) DO {
       fltClientType(i()) <- substr(staticCaption(ep),1,strpos(staticCaption(ep),':')-1) + ',';
       i() <- i() + 1;
    }   
    FOR (EnumRevise er IS EnumRevise) AND mark(er) AND i() < 10 ORDER staticName(er) DO {
       fltClientType(i()) <- substr(staticCaption(er),1,strpos(staticCaption(er),':')-1) + ',';
       i() <- i() + 1;
    } 
    i() <- 10;
    FOR (EnumContract ec IS EnumContract) AND mark(ec) AND i() < 15 ORDER staticName(ec) DO {
       fltClientOR() <- TRUE;    
       fltClientType(i()) <- substr(staticCaption(ec),1,strpos(staticCaption(ec),':')-1) ; //+ IF cdop(ec) THEN '(' + trim(cdop(ec)) + '),' ELSE ',';
       i() <- i() + 1;
    } 
} 