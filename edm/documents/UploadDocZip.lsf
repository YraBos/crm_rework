MODULE UploadDocZip;

REQUIRE EdmDocument, EdmDebtDashboard, EdmDocDashboard;

CLASS EnumUploadZip 'Выгрузка в zip' {
    all '1. Все отмеченные', noEdm '2. Все отмеченные без ЭДО'
}

FORM enumUploadZip 'Выгрузка документов в zip'
    OBJECTS o = EnumUploadZip
    PROPERTIES (o) READONLY staticCaption
    ORDERS staticCaption(o)
;

DESIGN enumUploadZip {PROPERTY (staticCaption(o)) {caption = 'Выбор операции';} }

fnameDoc = DATA LOCAL STRING();
setFnameDoc 'Установка имени файла в архиве' (Document d) {
    fnameDoc() <- fileName(d);
    CASE
        WHEN nameDocType(d) = 'Договор' THEN
            fnameDoc() <- nameLegalEntity(d) + '_Договор ' + number(contract(d)) + ' от ' + toDateDDMMYY(date(d)) + '.doc';
        WHEN nameDocType(d) = 'Соглашение' THEN
            fnameDoc() <- nameLegalEntity(d) + '_Договор ' + number(contract(d)) + ' Соглашение ' + number(d) + ' от ' + toDateDDMMYY(date(d)) + '.doc';
        WHEN nameDocType(d) = 'Акт выполненных работ' THEN
            fnameDoc() <- nameLegalEntity(d) + '_Договор ' + number(contract(d)) + ' Акт ' + number(d) + ' от ' + toDateDDMMYY(date(d)) + '.doc';
}

createZipDoc 'Выгрузить в zip' () {
    IF NOT GROUP SUM 1 IF in(Document d) THEN { MESSAGE 'Нет отмеченных записей'; RETURN; } 
    DIALOG enumUploadZip OBJECTS o INPUT DO {
        zipping(STRING[100] f) <- NULL;
        IF o = EnumUploadZip.all THEN {
            FOR (Document d IS Document) AND in(d) DO { setFnameDoc(d); zipping(STRING[100] f) <- file(d) WHERE f == fnameDoc(); }
        } ELSE {
            FOR (Document d IS Document) AND in(d)  AND NOT edm(d) DO { setFnameDoc(d); zipping(STRING[100] f) <- file(d) WHERE f == fnameDoc(); }
        }
        makeZipFile();
        open(zipped(),'archive');
    }
}

createZipAct 'Выгрузить в zip' () {
    IF NOT GROUP SUM 1 IF in(Debt d) THEN { MESSAGE 'Нет отмеченных записей'; RETURN; }
    DIALOG enumUploadZip OBJECTS o INPUT DO {
        zipping(STRING[100] f) <- NULL;
        IF o = EnumUploadZip.all THEN {
            FOR (Debt d IS Debt) AND in(d) DO { setFnameDoc(act(d)); zipping(STRING[100] f) <- file(act(d)) WHERE f == fnameDoc(); }
        } ELSE {
            FOR (Debt d IS Debt) AND in(d)  AND NOT actEdm(d) DO { setFnameDoc(act(d)); zipping(STRING[100] f) <- file(act(d)) WHERE f == fnameDoc(); }
        }
        makeZipFile();
        open(zipped(),'archive');
    }
}


EXTEND FORM docDashboard PROPERTIES() DRAW d TOOLBAR createZipDoc;
EXTEND FORM debtDashboard PROPERTIES() DRAW d TOOLBAR createZipAct;
