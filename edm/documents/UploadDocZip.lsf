MODULE UploadDocZip;

REQUIRE EdmDocument, EdmDebtDashboard, EdmDocDashboard, LegalEntityBy, Utils;

CLASS EnumUploadZip 'Выгрузка в zip' {
    all '1. Все отмеченные', noEdm '2. Все отмеченные без признака ЭДО'
}

FORM enumUploadZip 'Выгрузка документов в zip'
    OBJECTS o = EnumUploadZip
    PROPERTIES (o) READONLY staticCaption
    ORDERS staticCaption(o)
;

DESIGN enumUploadZip {PROPERTY (staticCaption(o)) {caption = 'Выбор операции';} }

zname 'Название организации для выгрузки в zip' (Document d) = nameLegalEntity(d) + '_' + OVERRIDE UNP(legalEntity(d)),'';
docNumber 'Номер договора' (Document d) = '_Договор ' + replace(number(contract(d)),'/','-');

fnameDoc 'Имя документа' (Document d) =
    IF nameDocType(d) = 'Договор' THEN zname(d) + docNumber(d) + ' от ' + toDateDDMMYY(date(d)) ELSE
    IF nameDocType(d) = 'Соглашение' THEN zname(d) + docNumber(d) + ' Соглашение ' + number(d) + ' от ' + toDateDDMMYY(date(d)) ELSE
    IF nameDocType(d) = 'Акт выполненных работ' THEN zname(d) + docNumber(d) + ' Акт ' + number(d) + ' от ' + toDateDDMMYY(date(d))  
    ELSE number(d) + ' от ' + toDateDDMMYY(date(d)) + '.doc';    

createZipDoc 'Выгрузить в zip' () {
    IF NOT GROUP SUM 1 IF in(Document d) THEN { MESSAGE 'Нет отмеченных записей'; RETURN; } 
    DIALOG enumUploadZip OBJECTS o INPUT DO {
        zipping(STRING[100] f) <- NULL;
        IF o = EnumUploadZip.all THEN {
            FOR (Document d IS Document) AND in(d) DO { zipping(STRING[100] f) <- file(d) WHERE f == fnameDoc(d) + '.doc'; }
        } ELSE {
            FOR (Document d IS Document) AND in(d)  AND NOT edm(d) DO { zipping(STRING[100] f) <- file(d) WHERE f == fnameDoc(d) + '.doc'; }
        }
        makeZipFile();
        open(zipped(),'archive');
    }
}


createZipDocEdm 'Выгрузить в zip с признаком ЭДО' () {
    IF NOT GROUP SUM 1 IF in(Document d) THEN { MESSAGE 'Нет отмеченных записей'; RETURN; }
    zipping(STRING[100] f) <- NULL;
    FOR (Document d IS Document) AND in(d) AND edm(d) DO { zipping(STRING[100] f) <- file(d) WHERE f == fnameDoc(d) + '.doc'; }
    makeZipFile();
    open(zipped(),'archive_edm');
}


createZipAct 'Выгрузить в zip' () {
    IF NOT GROUP SUM 1 IF in(Debt d) THEN { MESSAGE 'Нет отмеченных записей'; RETURN; }
    DIALOG enumUploadZip OBJECTS o INPUT DO {
        zipping(STRING[100] f) <- NULL;
        IF o = EnumUploadZip.all THEN {
            FOR (Debt d IS Debt) AND in(d) DO { zipping(STRING[100] f) <- file(act(d)) WHERE f == fnameDoc(act(d)) + '.doc'; }
        } ELSE {
            FOR (Debt d IS Debt) AND in(d)  AND NOT actEdm(d) DO { zipping(STRING[100] f) <- file(act(d)) WHERE f == fnameDoc(act(d)) + '.doc'; }
        }
        makeZipFile();
        open(zipped(),'archive');
    }
}


EXTEND FORM docDashboard PROPERTIES() DRAW d TOOLBAR createZipDoc;
EXTEND FORM debtDashboard PROPERTIES() DRAW d TOOLBAR createZipAct;
