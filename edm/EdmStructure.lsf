MODULE EdmStructure;

REQUIRE UploadDocZip;

errMessage 'Текст ошибки' = DATA LOCAL STRING ();
result = DATA LOCAL FILE ();

GROUP data;
GROUP cert : data;
GROUP meta;
GROUP errors : meta;

date_created = DATA LOCAL STRING();
public_key = DATA LOCAL STRING();
personal_id = DATA LOCAL STRING();
date_of_issue = DATA LOCAL ZDATETIME();
key_id = DATA LOCAL STRING();
date_of_expiry = DATA LOCAL ZDATETIME();
company_name = DATA LOCAL STRING();
distinguished_name = DATA LOCAL STRING();
short_company_name = DATA LOCAL STRING();
serial_number = DATA LOCAL STRING();
personal_name = DATA LOCAL STRING();
position = DATA LOCAL STRING();
tax_id = DATA LOCAL STRING();
email = DATA LOCAL STRING();

FORM profile 'Получить профиль'
    PROPERTIES() IN data date_created, email
    PROPERTIES() IN cert public_key, personal_id, date_of_issue, key_id, date_of_expiry,
                    company_name, distinguished_name, short_company_name, serial_number, personal_name, position, tax_id
;

GROUP count : meta;

data = DATA LOCAL STRING(INTEGER);
all = DATA LOCAL NUMERIC();
success = DATA LOCAL NUMERIC();
error = DATA LOCAL NUMERIC();
actions_errors = DATA LOCAL STRING(INTEGER);
errorsActions_errors = DATA LOCAL INTEGER(INTEGER);
common_errors = DATA LOCAL STRING(INTEGER);
errorsCommon_errors = DATA LOCAL INTEGER(INTEGER);

data = DATA LOCAL STRING();
errors = DATA LOCAL STRING(INTEGER);
metaErrors = DATA LOCAL INTEGER(INTEGER);

FORM error
    OBJECTS data = INTEGER
    PROPERTIES(data) data EXTID 'value'
    FILTERS imported(data)
    PROPERTIES() IN count all, success, error
    
    OBJECTS actions_errors = INTEGER IN errors
    PROPERTIES(actions_errors) actions_errors EXTID 'value'
    FILTERS imported(actions_errors)
    
    OBJECTS common_errors = INTEGER IN errors
    PROPERTIES(common_errors) common_errors EXTID 'value'
    FILTERS imported(common_errors)

    OBJECTS errors = INTEGER IN meta
    PROPERTIES(errors) errors EXTID 'value'
    FILTERS imported(errors);
;


////signBase64 'Цифровая подпись' 
//
//
//action = DATA LOCAL STRING ();
//actionName (Document o) = IF o THEN action(); 
//docbase64 'Перекодированный документ' (Document o) = encode(file(o), 'base64');
//signature (Document o) = IF o THEN '';
//emailEdo (LegalEntity o) = email(customer(o));
//
//FORM sendDoc 'Отправка документов'
//    OBJECTS d = Document EXTID 'actions'
//    PROPERTIES(d) actionName EXTID 'action', docbase64 EXTID 'doc_base64', fnameDoc EXTID 'doc_filename', 
//                signature EXTID 'signature_der_data'
//    OBJECTS e = LegalEntity EXTID 'recipients'
//    PROPERTIES(e) emailEdo EXTID 'value'
//    FILTERS in(d), legalEntity(d) = e
//;