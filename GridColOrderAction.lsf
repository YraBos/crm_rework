MODULE GridColOrderAction;

REQUIRE GridColOrderFunction, FixedAssets;

FORM setDefaultGridColSet 'Управление состоянием GRID';

vAsk '' = DATA LOCAL BOOLEAN ();

onExecute '' (fName, oName, colName) {
    vAsk() <- NULL;
    ASK 'Вы действительно хотите создать новое состояние\nтабличного процессора для всех?' DO vAsk() <- TRUE;
    IF vAsk() THEN {
        onGridColOrderSet(fName, oName, colName);
        MESSAGE 'Выполнено'; 
    }
    ELSE MESSAGE 'Операция отменена';
}

onCustomerTimeNew 'Выставление счетов - Отмеченное время' () {
    LOCAL columns = TEXT ();
    // отметка, номер задачи, задача, часы, скидка, дата, трекер, приоритет, по отд. договору, исполнитель
    columns() <- 'in,numberIssue,nameIssue,hours,discountHours,date,nameTrackerIssue,priorityNameIssue,separateContractIssue,nameEmployee';
    onExecute('Customer.customerTimeDashboard','t',columns());
}

onCustomerIssueNew 'Выставление счетов - Задачи' () {
    LOCAL columns = TEXT ();
    // отметка, номер задачи, дата создания, задача, отмеч. время, скидка, Оцен. время, исполнитель, дата изменения, трекер, приоритет, автор
    columns() <- 'in,number,dateTimeCreated,name,hours,discountHours,estimatedHours,dateTimeUpdated,nameTracker,priorityName,nameAutor';
    onExecute('Customer.customerTimeDashboard','is',columns());
}


EXTEND FORM setDefaultGridColSet 
    PROPERTIES onCustomerTimeNew(), onCustomerIssueNew()
;

NAVIGATOR {
    FixedAssetsFolder {
        NEW FORM setDefaultGridColSet;
    }
}